<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="CommunityMapper">

	<resultMap type ="community" id="communitySelectMap">
		<result property="postNo" column="post_no" jdbcType="INTEGER" />
		<result property="user.userId" column="user_id" jdbcType="VARCHAR" />
		<result property="communityName" column="communites_name" jdbcType="CHAR" />
		<result property="meet.meetId" column="meet_id" jdbcType="VARCHAR" />
		<result property="offMeet.offNo" column="off_no" jdbcType="INTEGER" />
		<result property="business_businessId" column="business_id" jdbcType="VARCHAR"/>
		<result property="title" column="title" jdbcType="VARCHAR"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="regDate" column="reg_date" jdbcType="DATE"/>
	     <result property="modDate" column="mod_date" jdbcType="DATE"/>
	    <result property="viewCount" column="view_count" jdbcType="NUMERIC"/>
	    <result property="likeCount" column="like_count" jdbcType="NUMERIC"/>
	    <result property="rvstar" column="rvstar" jdbcType="INTEGER"/>
	    
    </resultMap>

  <resultMap id="commentsSelectMap" type="comments">
	    <result property="commentNo" 		  column= "COMMENT_NO" 			   jdbcType="INTEGER"/>
		<result property="postNo" 			  column= "POST_NO" 			   jdbcType="INTEGER"/>
		<result property="user.userId"	          column= "USER_ID" 		       jdbcType="VARCHAR" />
		<result property="parentCommentNo" 	  column= "PARENT_COMMENT_NO" 	   jdbcType="INTEGER" />
		<result property="coContent"	  column= "COMMENT_CONTENT"		   jdbcType="VARCHAR" />
		<result property="regDate" 			  column= "REG_DATE" 		       jdbcType="DATE" />
	</resultMap>
	
	<insert id="addPost"		parameterType="community" >
		INSERT
		INTO communities( post_no , user_id , communites_name , meet_id , title , content , reg_date , mod_date) 
		VALUES	 ( seq_communites_post_no.NEXTVAL , #{user.userId:VARCHAR} , '0' , #{meet.meetId:VARCHAR} , 
							#{title:VARCHAR} ,  #{content:VARCHAR}, SYSDATE, NULL)
	</insert>
	
	<select id="getPost" parameterType="int" resultMap="communitySelectMap">
	SELECT post_no, user_id, meet_id, title, content, reg_date, mod_date
	FROM communities
	WHERE post_no=#{value}
	</select>
	
	<select id="getPostList" parameterType="map" resultMap="communitySelectMap">
  	SELECT *
  		FROM ( SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT  post_no, communites_name, meet_id, user_id, title, content,reg_date,mod_date
										FROM communities
										WHERE communites_name = '0' AND meet_id = #{meetId} 
										<if test='search.searchCondition !=null'>
											<where>
												<if test='search.searchCondition == "0"'>
													AND title LIKE '%#{search.searchKeyword}%'
												</if>
												<if test="search.searchCondition == '1' ">
													 AND user_id=#{search.searchKeyword}
												</if>
											</where>
										</if>

<!-- 										WHERE  -->
<!-- 										communites_name  = '0' -->
<!-- 										AND meet_id = #{meetId} -->
										ORDER BY reg_date DESC ) inner_table
						WHERE ROWNUM &lt;= #{search.endRowNum} )
		WHERE row_seq BETWEEN #{search.startRowNum} AND #{search.endRowNum}
	</select>
	
	<update id="updatePost" parameterType="community" >
		UPDATE communities
		<set>
		title = #{title}, 
		content = #{content} , 
	    reg_date = sysdate
		</set>
		WHERE communites_name = '0' and post_no = #{postNo} 
	</update>
	
	<delete id="deletePost" parameterType="community" >
		DELETE FROM communities 
		WHERE post_no = #{postNo}
	</delete>	
	
	<select  id="getTotalCount"  parameterType="String"	 resultType="int">
	  	SELECT COUNT(*)
		FROM (SELECT inner_table.*, ROWNUM AS row_seq
  						FROM ( SELECT  post_no, communites_name, meet_id, user_id, title, content,reg_date,mod_date
										FROM communities
										WHERE communites_name = '0' AND meet_id = #{meetId}
										ORDER BY reg_date DESC ) inner_table
			 ) countTable						
	 </select>
	 
	  <insert id="addComments"		parameterType="comments" >
		INSERT
		INTO comments( comment_no , post_no , user_id , COMMENT_CONTENT , reg_date , parent_comment_no) 
		VALUES	 ( seq_comments_no.NEXTVAL , #{postNo:INTEGER} , #{user.userId:VARCHAR} , 
							 #{coContent:VARCHAR}, SYSDATE, #{parentCommentNo:NUMERIC})
	</insert>
	
	<select id="getComments" parameterType="int" resultMap="commentsSelectMap">
		SELECT *
		FROM comments
		WHERE comment_no = #{value}
	</select>
	
	<select id ="getCommentsList" parameterType="int" resultMap="commentsSelectMap">
		SELECT *
		FROM (
				SELECT inner_table.*
				FROM (
					SELECT c.comment_no, c.user_id , p.post_no, c.comment_content, c.reg_date
					FROM comments c, communities p
					WHERE c.post_no = p.post_no
						AND c.post_no = #{value}
					ORDER BY c.reg_date DESC) inner_table) 
	</select>
	
	<select id ="updateComments" parameterType="comments">
		UPDATE comments
		<set>
			comment_content=#{coContent}
		</set>
		WHERE comment_no = #{commentNo}
	</select>
	
	<delete id="deleteComments" parameterType="int"> 
		DELETE
		FROM comments
		WHERE comment_no = {value}
	</delete>
	
	<select id ="getCommentsTotalCount" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM(
				SELECT *
				FROM (
					SELECT inner_table.*
					FROM (
						SELECT c.comment_no, p.post_no, c.comment_content, c.reg_date, c.parent_comment_no
						FROM comments c, communities p
						WHERE c.post_no = p.post_no
							AND c.post_no = #{postNo}
						ORDER BY c.reg_date DESC) inner_table) 
		) countTable
	</select>
</mapper>